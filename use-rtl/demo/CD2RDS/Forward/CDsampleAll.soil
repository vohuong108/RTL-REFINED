-- Script generated by USE 3.0.6

!new RuleCollection('rc')
!new Class('Person')
!new Class('Company')
!new Class('Job')
!new Attribute('PersonID')
!new Attribute('PersonName')
!new Attribute('CompanyName')
!new Attribute('CompanyID')
!new Attribute('JobName')
!new Association('Work')
!new Association('Hire')
!insert (@Company,@CompanyName) into attrs
!insert (@Company,@CompanyID) into attrs
!insert (@Person,@PersonName) into attrs
!insert (@Person,@PersonID) into attrs
!insert (@Job,@JobName) into attrs
!insert (@Hire,@Company) into dest
!insert (@Hire,@Job) into src
!insert (@Work,@Job) into src
!insert (@Work,@Person) into dest
!@Person.is_persistent := true
!@Person.name := '_person'
!@PersonID.name := '_personID'
!@PersonID.is_primary := true
!@PersonName.name := '_personName'
!@PersonName.is_primary := false
!@Work.name := '_work'
!@Job.name := 'Job'
!@Job.is_persistent := true
!@Hire.name := '_hire'
!@Company.name := '_company'
!@Company.is_persistent := true
!@CompanyName.name := '_companyName'
!@CompanyName.is_primary := false
!@CompanyID.name := '_companyID'
!@CompanyID.is_primary := true
!@JobName.name := '_jobName'
!@JobName.is_primary := false
!new PrimitiveDataType('Int')
!new PrimitiveDataType('String')
!@Int.name := 'Int'
!@String.name := 'String'
!insert (@PersonID,@Int) into priType
!insert (@PersonName,@String) into priType
!insert (@CompanyName,@String) into priType
!insert (@CompanyID,@String) into priType
!insert (@JobName,@Int) into priType
!delete (@CompanyID,@String) from priType
!insert (@CompanyID,@Int) into priType
!delete (@JobName,@Int) from priType
!insert (@JobName,@String) into priType
!openter rc trafoClass2Table_forwTrafo(matchSR)
!new Table('N_Table2')
!theTableA := N_Table2
!new C2T('N_C2T2')
!c2t := N_C2T2
!insert (theClassA,c2t) into Class_C2T
!insert (theTableA,c2t) into Table_C2T
!c2t.t.name := c2t.c.name
!opexit
!openter rc trafoClass2Table_forwTrafo(matchSR)
!new Table('N_Table3')
!theTableA := N_Table3
!new C2T('N_C2T3')
!c2t := N_C2T3
!insert (theClassA,c2t) into Class_C2T
!insert (theTableA,c2t) into Table_C2T
!c2t.t.name := c2t.c.name
!opexit
!openter rc trafoClass2Table_forwTrafo(matchSR)
!new Table('N_Table4')
!theTableA := N_Table4
!new C2T('N_C2T4')
!c2t := N_C2T4
!insert (theClassA,c2t) into Class_C2T
!insert (theTableA,c2t) into Table_C2T
!c2t.t.name := c2t.c.name
!opexit
!openter rc trafoPriAtt2Col_forwTrafo(matchSR, matchCL, matchTL)
!new Column('N_Column1')
!theColumnA := N_Column1
!insert (theTableA,theColumnA) into cols
!new P2C('N_P2C1')
!p2c := N_P2C1
!new A2C('N_A2C1')
!a2c := N_A2C1
!insert (theAttrA,a2c) into Attribute_A2C
!insert (thePriTypeA,p2c) into PrimitiveDataType_P2C
!insert (theColumnA,a2c) into Column_A2C
!insert (theColumnA,p2c) into Column_P2C
!p2c.c.type := p2c.p.name
!a2c.c.name := a2c.a.name
!opexit
!openter rc trafoPriAtt2Col_forwTrafo(matchSR, matchCL, matchTL)
!new Column('N_Column2')
!theColumnA := N_Column2
!insert (theTableA,theColumnA) into cols
!new P2C('N_P2C2')
!p2c := N_P2C2
!new A2C('N_A2C2')
!a2c := N_A2C2
!insert (theAttrA,a2c) into Attribute_A2C
!insert (thePriTypeA,p2c) into PrimitiveDataType_P2C
!insert (theColumnA,a2c) into Column_A2C
!insert (theColumnA,p2c) into Column_P2C
!p2c.c.type := p2c.p.name
!a2c.c.name := a2c.a.name
!opexit
!openter rc trafoPriAtt2Col_forwTrafo(matchSR, matchCL, matchTL)
!new Column('N_Column3')
!theColumnA := N_Column3
!insert (theTableA,theColumnA) into cols
!new P2C('N_P2C3')
!p2c := N_P2C3
!new A2C('N_A2C3')
!a2c := N_A2C3
!insert (theAttrA,a2c) into Attribute_A2C
!insert (thePriTypeA,p2c) into PrimitiveDataType_P2C
!insert (theColumnA,a2c) into Column_A2C
!insert (theColumnA,p2c) into Column_P2C
!p2c.c.type := p2c.p.name
!a2c.c.name := a2c.a.name
!opexit
!openter rc trafoPriAtt2Col_forwTrafo(matchSR, matchCL, matchTL)
!new Column('N_Column4')
!theColumnA := N_Column4
!insert (theTableA,theColumnA) into cols
!new P2C('N_P2C4')
!p2c := N_P2C4
!new A2C('N_A2C4')
!a2c := N_A2C4
!insert (theAttrA,a2c) into Attribute_A2C
!insert (thePriTypeA,p2c) into PrimitiveDataType_P2C
!insert (theColumnA,a2c) into Column_A2C
!insert (theColumnA,p2c) into Column_P2C
!p2c.c.type := p2c.p.name
!a2c.c.name := a2c.a.name
!opexit
!openter rc trafoPriAtt2Col_forwTrafo(matchSR, matchCL, matchTL)
!new Column('N_Column5')
!theColumnA := N_Column5
!insert (theTableA,theColumnA) into cols
!new P2C('N_P2C5')
!p2c := N_P2C5
!new A2C('N_A2C5')
!a2c := N_A2C5
!insert (theAttrA,a2c) into Attribute_A2C
!insert (thePriTypeA,p2c) into PrimitiveDataType_P2C
!insert (theColumnA,a2c) into Column_A2C
!insert (theColumnA,p2c) into Column_P2C
!p2c.c.type := p2c.p.name
!a2c.c.name := a2c.a.name
!opexit
!openter rc trafoPrimary2PKey_forwTrafo(matchSR, matchCL, matchTL)
!new PrimaryKey('N_PrimaryKey1')
!thePriKeyA := N_PrimaryKey1
!insert (theTableA,thePriKeyA) into keys
!insert (thePriKeyA,theTableA) into primary
!insert (theColumnA,thePriKeyA) into constraint
!opexit
!openter rc trafoPrimary2PKey_forwTrafo(matchSR, matchCL, matchTL)
!new PrimaryKey('N_PrimaryKey2')
!thePriKeyA := N_PrimaryKey2
!insert (theTableA,thePriKeyA) into keys
!insert (thePriKeyA,theTableA) into primary
!insert (theColumnA,thePriKeyA) into constraint
!opexit
!openter rc trafoAss2Col_forwTrafo(matchSR, matchCL, matchTL)
!new Column('N_Column6')
!theColumnA := N_Column6
!new ForeignKey('N_ForeignKey1')
!theForeignKeyA := N_ForeignKey1
!insert (theTableA,theColumnA) into cols
!insert (theTableA,theForeignKeyA) into keys
!insert (theForeignKeyA,theTableB) into foreign
!insert (theColumnA,theForeignKeyA) into constraint
!new ASS2C('N_ASS2C1')
!ass2c := N_ASS2C1
!insert (theColumnA,ass2c) into Column_ASS2C
!insert (theAssA,ass2c) into Association_ASS2C
!ass2c.c.name := ass2c.ass.name
!theColumnA.type := theColumnB.type
!opexit
!openter rc trafoAss2Col_forwTrafo(matchSR, matchCL, matchTL)
!new Column('N_Column7')
!theColumnA := N_Column7
!new ForeignKey('N_ForeignKey2')
!theForeignKeyA := N_ForeignKey2
!insert (theTableA,theColumnA) into cols
!insert (theTableA,theForeignKeyA) into keys
!insert (theForeignKeyA,theTableB) into foreign
!insert (theColumnA,theForeignKeyA) into constraint
!new ASS2C('N_ASS2C2')
!ass2c := N_ASS2C2
!insert (theColumnA,ass2c) into Column_ASS2C
!insert (theAssA,ass2c) into Association_ASS2C
!ass2c.c.name := ass2c.ass.name
!theColumnA.type := theColumnB.type
!opexit
