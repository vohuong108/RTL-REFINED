# $ProjectHeader: use 0.393 Wed, 16 May 2007 14:10:28 +0200 opti $

# See the README file in this directory for information about the file
# format.

### test type inference for collection literals

# create some objects

!create a : A
!create b : B
!create c : C
!create d : D
!create e : E

? Set{a,b,c,d,e}
*-> Set{a,b,c,d,e} : Set(A)

? Set{b,c}
*-> Set{b,c} : Set(A)

#? Set{d,e}
#*-> Set{d,e} : Set(A)

### standard data types

? Set{true,1,'foo',3.4}
*-> Set{'foo',1,3.4,true} : Set(OclAny)

? Sequence{true,1,'foo',3.4}
*-> Sequence{true,1,'foo',3.4} : Sequence(OclAny)

? Bag{true,1,'foo',3.4}
*-> Bag{'foo',1,3.4,true} : Bag(OclAny)

? Set{1}
*-> Set{1} : Set(Integer)

? Set{1,1.1}
*-> Set{1,1.1} : Set(Real)

? Set{1,1.1,true}
*-> Set{1,1.1,true} : Set(OclAny)

? Set{1,1.1,true}->select(e | true)
*-> Set{1,1.1,true} : Set(OclAny)

? Set{1,1.1,true}->select(e | e.oclIsKindOf(Boolean))
*-> Set{true} : Set(Boolean)

? Set{1,1.1,true}->select(e | e.oclIsKindOf(Boolean))
*-> Set{true} : Set(Boolean)

? Set{1,1.1,true}->select(e | e.oclIsKindOf(Real))
*-> Set{1,1.1} : Set(Real)

? Set{1,1.1,true}->select(e | e.oclIsTypeOf(Real))
*-> Set{1.1} : Set(Real)

? Set{1,1.1,true}->select(e | e.oclIsKindOf(OclAny))
*-> Set{1,1.1,true} : Set(OclAny)

exit
